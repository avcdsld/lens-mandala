/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type {
  FeeCollectModule,
  FeeCollectModuleInterface,
} from '../FeeCollectModule'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'hub',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'moduleGlobals',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'FollowInvalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InitParamsInvalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ModuleDataMismatch',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotHub',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HUB',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MODULE_GLOBALS',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'profileId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'pubId',
        type: 'uint256',
      },
    ],
    name: 'getPublicationData',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'recipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'currency',
            type: 'address',
          },
          {
            internalType: 'uint16',
            name: 'referralFee',
            type: 'uint16',
          },
        ],
        internalType: 'struct ProfilePublicationData',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'profileId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'pubId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'initializePublicationCollectModule',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'referrerProfileId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'collector',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'profileId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'pubId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'processCollect',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60c060405234801561001057600080fd5b506040516111e63803806111e683398101604081905261002f91610128565b81816001600160a01b038116610058576040516348be0eb360e01b815260040160405180910390fd5b6001600160a01b03811660808190526040514281527f4e84a529f4c627b5e787037d117873af1018768804cca3c7f0d47041fe2c89ed9060200160405180910390a2506001600160a01b0381166100c2576040516348be0eb360e01b815260040160405180910390fd5b6001600160a01b03811660a08190526040514281527ff1a1fa6b64aa95186f5a1285e76198d0da80d9c5a88062641d447f1d7c54e56c9060200160405180910390a250505061015b565b80516001600160a01b038116811461012357600080fd5b919050565b6000806040838503121561013b57600080fd5b6101448361010c565b91506101526020840161010c565b90509250929050565b60805160a0516110356101b16000396000818161017d015281816101e1015281816103390152818161045f01528181610568015261084701526000818161013e015281816103d3015261097c01526110356000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633f5038921461005c57806388ffe85114610139578063a4c52b8614610178578063c233f9511461019f578063e49c3dda146101bf575b600080fd5b6100ef61006a366004610ca0565b604080516080810182526000808252602082018190529181018290526060810191909152506000918252602082815260408084209284529181529181902081516080810183528154815260018201546001600160a01b039081169482019490945260029091015492831691810191909152600160a01b90910461ffff16606082015290565b60408051825181526020808401516001600160a01b039081169183019190915283830151169181019190915260609182015161ffff16918101919091526080015b60405180910390f35b6101607f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610130565b6101607f000000000000000000000000000000000000000000000000000000000000000081565b6101b26101ad366004610d0b565b6101d4565b6040516101309190610db6565b6101d26101cd366004610de1565b61032e565b005b6060336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461021f576040516313bd2e8360e31b815260040160405180910390fd5b600080808061023086880188610e64565b9350935093509350610241836103b1565b158061025457506001600160a01b038216155b80610264575061271061ffff8216115b8061026d575083155b1561028b576040516348be0eb360e01b815260040160405180910390fd5b6000898152602081815260408083208b84528252918290206002810180546001830180546001600160a01b038981166001600160a01b03199283161790925590891661ffff8816600160a01b029091166001600160b01b0319909216919091171790558690558151601f89018290048202810182019092528782528890889081908401838280828437600092019190915250929c9b505050505050505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610377576040516313bd2e8360e31b815260040160405180910390fd5b6103818486610446565b8386141561039b576103968585858585610692565b6103a9565b6103a9868686868686610761565b505050505050565b6040516343b938c560e01b81526001600160a01b0382811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906343b938c590602401602060405180830381865afa15801561041c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104409190610eb7565b92915050565b604051633648f48360e21b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d923d20c90602401602060405180830381865afa1580156104ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d29190610ed9565b90506001600160a01b0381161561054f57604051635a30b51560e11b8152600481018490526001600160a01b0383811660248301526000604483015282169063b4616a2a9060640160006040518083038186803b15801561053257600080fd5b505afa158015610546573d6000803e3d6000fd5b50505050505050565b60405163a9ec656360e01b8152600481018490526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9ec656390602401602060405180830381865afa1580156105b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105db9190610ed9565b90506001600160a01b03811661060457604051636992d36b60e11b815260040160405180910390fd5b6040516370a0823160e01b81526001600160a01b0384811660048301528216906370a0823190602401602060405180830381865afa15801561064a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066e9190610ef6565b61068b57604051636992d36b60e11b815260040160405180910390fd5b505b505050565b600084815260208181526040808320868452909152902080546002909101546001600160a01b03166106c684848385610925565b6000806106d1610977565b60008a8152602081815260408083208c84529091528120600101549294509092506001600160a01b039091169061271061070f61ffff851688610f25565b6107199190610f44565b905060006107278288610f66565b905061073e6001600160a01b0387168d8584610a03565b6107536001600160a01b0387168d8785610a03565b505050505050505050505050565b600084815260208181526040808320868452909152902080546002909101546001600160a01b031661079584848385610925565b600086815260208181526040808320888452909152812060020154600160a01b900461ffff169080806107c6610977565b90935090506127106107dc61ffff831688610f25565b6107e69190610f44565b9150600090506107f68287610f66565b905083156108cc57600061271061080d8684610f25565b6108179190610f44565b90506108238183610f66565b6040516331a9108f60e11b8152600481018f90529092506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa15801561088e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b29190610ed9565b90506108c96001600160a01b0388168e8385610a03565b50505b60008a8152602081815260408083208c84529091529020600101546001600160a01b03908116906109019087168d8385610a03565b6109166001600160a01b0387168d8686610a03565b50505050505050505050505050565b60008061093485870187610f7d565b9150915082811415806109595750836001600160a01b0316826001600160a01b031614155b156103a9576040516346308bd560e01b815260040160405180910390fd5b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166398f965d16040518163ffffffff1660e01b81526004016040805180830381865afa1580156109d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fb9190610fa9565b915091509091565b604080516001600160a01b038581166024830152848116604483015260648083018590528351808403909101815260849092018352602080830180516001600160e01b03166323b872dd60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261068b92879291600091610a9b918516908490610b1d565b80519091501561068d5780806020019051810190610ab99190610eb7565b61068d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b6060610b2c8484600085610b36565b90505b9392505050565b606082471015610b975760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610b14565b6001600160a01b0385163b610bee5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b14565b600080866001600160a01b03168587604051610c0a9190610fe3565b60006040518083038185875af1925050503d8060008114610c47576040519150601f19603f3d011682016040523d82523d6000602084013e610c4c565b606091505b5091509150610c5c828286610c67565b979650505050505050565b60608315610c76575081610b2f565b825115610c865782518084602001fd5b8160405162461bcd60e51b8152600401610b149190610db6565b60008060408385031215610cb357600080fd5b50508035926020909101359150565b60008083601f840112610cd457600080fd5b50813567ffffffffffffffff811115610cec57600080fd5b602083019150836020828501011115610d0457600080fd5b9250929050565b60008060008060608587031215610d2157600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610d4657600080fd5b610d5287828801610cc2565b95989497509550505050565b60005b83811015610d79578181015183820152602001610d61565b8381111561068b5750506000910152565b60008151808452610da2816020860160208601610d5e565b601f01601f19169290920160200192915050565b602081526000610b2f6020830184610d8a565b6001600160a01b0381168114610dde57600080fd5b50565b60008060008060008060a08789031215610dfa57600080fd5b863595506020870135610e0c81610dc9565b94506040870135935060608701359250608087013567ffffffffffffffff811115610e3657600080fd5b610e4289828a01610cc2565b979a9699509497509295939492505050565b61ffff81168114610dde57600080fd5b60008060008060808587031215610e7a57600080fd5b843593506020850135610e8c81610dc9565b92506040850135610e9c81610dc9565b91506060850135610eac81610e54565b939692955090935050565b600060208284031215610ec957600080fd5b81518015158114610b2f57600080fd5b600060208284031215610eeb57600080fd5b8151610b2f81610dc9565b600060208284031215610f0857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610f3f57610f3f610f0f565b500290565b600082610f6157634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610f7857610f78610f0f565b500390565b60008060408385031215610f9057600080fd5b8235610f9b81610dc9565b946020939093013593505050565b60008060408385031215610fbc57600080fd5b8251610fc781610dc9565b6020840151909250610fd881610e54565b809150509250929050565b60008251610ff5818460208701610d5e565b919091019291505056fea2646970667358221220b1774b54e79f09ca9ed7808b50709b0e285905ab5da85b6ce0cdf2120fee94b964736f6c634300080a0033'

type FeeCollectModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: FeeCollectModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class FeeCollectModule__factory extends ContractFactory {
  constructor(...args: FeeCollectModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  deploy(
    hub: string,
    moduleGlobals: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeeCollectModule> {
    return super.deploy(
      hub,
      moduleGlobals,
      overrides || {}
    ) as Promise<FeeCollectModule>
  }
  getDeployTransaction(
    hub: string,
    moduleGlobals: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(hub, moduleGlobals, overrides || {})
  }
  attach(address: string): FeeCollectModule {
    return super.attach(address) as FeeCollectModule
  }
  connect(signer: Signer): FeeCollectModule__factory {
    return super.connect(signer) as FeeCollectModule__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): FeeCollectModuleInterface {
    return new utils.Interface(_abi) as FeeCollectModuleInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeCollectModule {
    return new Contract(address, _abi, signerOrProvider) as FeeCollectModule
  }
}
