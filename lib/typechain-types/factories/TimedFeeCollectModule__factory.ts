/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TimedFeeCollectModule,
  TimedFeeCollectModuleInterface,
} from "../TimedFeeCollectModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "hub",
        type: "address",
      },
      {
        internalType: "address",
        name: "moduleGlobals",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CollectExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "FollowInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "InitParamsInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleDataMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "NotHub",
    type: "error",
  },
  {
    inputs: [],
    name: "HUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MODULE_GLOBALS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
    ],
    name: "getPublicationData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "referralFee",
            type: "uint16",
          },
          {
            internalType: "uint40",
            name: "endTimestamp",
            type: "uint40",
          },
        ],
        internalType: "struct ProfilePublicationData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializePublicationCollectModule",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "referrerProfileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processCollect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516112b63803806112b683398101604081905261002f91610128565b81816001600160a01b038116610058576040516348be0eb360e01b815260040160405180910390fd5b6001600160a01b03811660808190526040514281527f4e84a529f4c627b5e787037d117873af1018768804cca3c7f0d47041fe2c89ed9060200160405180910390a2506001600160a01b0381166100c2576040516348be0eb360e01b815260040160405180910390fd5b6001600160a01b03811660a08190526040514281527ff1a1fa6b64aa95186f5a1285e76198d0da80d9c5a88062641d447f1d7c54e56c9060200160405180910390a250505061015b565b80516001600160a01b038116811461012357600080fd5b919050565b6000806040838503121561013b57600080fd5b6101448361010c565b91506101526020840161010c565b90509250929050565b60805160a0516111056101b1600039600081816101a80152818161020c01528181610396015281816105070152818161060701526108e60152600081816101690152818161047b0152610a2301526111056000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633f5038921461005c57806388ffe85114610164578063a4c52b86146101a3578063c233f951146101ca578063e49c3dda146101ea575b600080fd5b61010961006a366004610d47565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091525060009182526020828152604080842092845291815291819020815160a0810183528154815260018201546001600160a01b039081169482019490945260029091015492831691810191909152600160a01b820461ffff166060820152600160b01b90910464ffffffffff16608082015290565b60408051825181526020808401516001600160a01b039081169183019190915283830151169181019190915260608083015161ffff169082015260809182015164ffffffffff169181019190915260a0015b60405180910390f35b61018b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161015b565b61018b7f000000000000000000000000000000000000000000000000000000000000000081565b6101dd6101d8366004610db2565b6101ff565b60405161015b9190610e5d565b6101fd6101f8366004610e88565b61038b565b005b6060336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461024a576040516313bd2e8360e31b815260040160405180910390fd5b60006102596201518042610f11565b9050600080808061026c87890189610f4a565b935093509350935061027d83610459565b158061029057506001600160a01b038216155b806102a0575061271061ffff8216115b806102a9575083155b156102c7576040516348be0eb360e01b815260040160405180910390fd5b6000998a5260208a81526040808c209a8c52998152998990208481556001810180546001600160a01b0319166001600160a01b0395861690811790915560029091018054939094166001600160b01b03199093168317600160a01b61ffff939093169283021764ffffffffff60b01b1916600160b01b64ffffffffff97909716968702179093558851998a0193909352888801919091526060880152608087015260a0808701919091528451808703909101815260c0909501909352509192915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103d4576040516313bd2e8360e31b815260040160405180910390fd5b6103de84866104ee565b600084815260208181526040808320868452909152902060020154600160b01b900464ffffffffff1642811015610428576040516304cd703960e51b815260040160405180910390fd5b848714156104425761043d8686868686610731565b610450565b610450878787878787610800565b50505050505050565b6040516343b938c560e01b81526001600160a01b0382811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906343b938c590602401602060405180830381865afa1580156104c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e89190610f9d565b92915050565b604051633648f48360e21b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d923d20c90602401602060405180830381865afa158015610556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a9190610fbf565b90506001600160a01b038116156105ee57604051635a30b51560e11b8152600481018490526001600160a01b0383811660248301526000604483015282169063b4616a2a9060640160006040518083038186803b1580156105da57600080fd5b505afa158015610450573d6000803e3d6000fd5b60405163a9ec656360e01b8152600481018490526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9ec656390602401602060405180830381865afa158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067a9190610fbf565b90506001600160a01b0381166106a357604051636992d36b60e11b815260040160405180910390fd5b6040516370a0823160e01b81526001600160a01b0384811660048301528216906370a0823190602401602060405180830381865afa1580156106e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070d9190610fdc565b61072a57604051636992d36b60e11b815260040160405180910390fd5b505b505050565b600084815260208181526040808320868452909152902080546001909101546001600160a01b0316610765848483856109c4565b600080610770610a1e565b60008a8152602081815260408083208c84529091528120600201549294509092506001600160a01b03909116906127106107ae61ffff851688610ff5565b6107b89190611014565b905060006107c68288611036565b90506107dd6001600160a01b0387168d8584610aaa565b6107f26001600160a01b0387168d8785610aaa565b505050505050505050505050565b600084815260208181526040808320868452909152902080546001909101546001600160a01b0316610834848483856109c4565b600086815260208181526040808320888452909152812060020154600160a01b900461ffff16908080610865610a1e565b909350905061271061087b61ffff831688610ff5565b6108859190611014565b9150600090506108958287611036565b9050831561096b5760006127106108ac8684610ff5565b6108b69190611014565b90506108c28183611036565b6040516331a9108f60e11b8152600481018f90529092506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa15801561092d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109519190610fbf565b90506109686001600160a01b0388168e8385610aaa565b50505b60008a8152602081815260408083208c84529091529020600201546001600160a01b03908116906109a09087168d8385610aaa565b6109b56001600160a01b0387168d8686610aaa565b50505050505050505050505050565b6000806109d38587018761104d565b9150915082811415806109f85750836001600160a01b0316826001600160a01b031614155b15610a16576040516346308bd560e01b815260040160405180910390fd5b505050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166398f965d16040518163ffffffff1660e01b81526004016040805180830381865afa158015610a7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa29190611079565b915091509091565b604080516001600160a01b038581166024830152848116604483015260648083018590528351808403909101815260849092018352602080830180516001600160e01b03166323b872dd60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261072a92879291600091610b42918516908490610bc4565b80519091501561072c5780806020019051810190610b609190610f9d565b61072c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b6060610bd38484600085610bdd565b90505b9392505050565b606082471015610c3e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610bbb565b6001600160a01b0385163b610c955760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bbb565b600080866001600160a01b03168587604051610cb191906110b3565b60006040518083038185875af1925050503d8060008114610cee576040519150601f19603f3d011682016040523d82523d6000602084013e610cf3565b606091505b5091509150610d03828286610d0e565b979650505050505050565b60608315610d1d575081610bd6565b825115610d2d5782518084602001fd5b8160405162461bcd60e51b8152600401610bbb9190610e5d565b60008060408385031215610d5a57600080fd5b50508035926020909101359150565b60008083601f840112610d7b57600080fd5b50813567ffffffffffffffff811115610d9357600080fd5b602083019150836020828501011115610dab57600080fd5b9250929050565b60008060008060608587031215610dc857600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610ded57600080fd5b610df987828801610d69565b95989497509550505050565b60005b83811015610e20578181015183820152602001610e08565b8381111561072a5750506000910152565b60008151808452610e49816020860160208601610e05565b601f01601f19169290920160200192915050565b602081526000610bd66020830184610e31565b6001600160a01b0381168114610e8557600080fd5b50565b60008060008060008060a08789031215610ea157600080fd5b863595506020870135610eb381610e70565b94506040870135935060608701359250608087013567ffffffffffffffff811115610edd57600080fd5b610ee989828a01610d69565b979a9699509497509295939492505050565b634e487b7160e01b600052601160045260246000fd5b600064ffffffffff808316818516808303821115610f3157610f31610efb565b01949350505050565b61ffff81168114610e8557600080fd5b60008060008060808587031215610f6057600080fd5b843593506020850135610f7281610e70565b92506040850135610f8281610e70565b91506060850135610f9281610f3a565b939692955090935050565b600060208284031215610faf57600080fd5b81518015158114610bd657600080fd5b600060208284031215610fd157600080fd5b8151610bd681610e70565b600060208284031215610fee57600080fd5b5051919050565b600081600019048311821515161561100f5761100f610efb565b500290565b60008261103157634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561104857611048610efb565b500390565b6000806040838503121561106057600080fd5b823561106b81610e70565b946020939093013593505050565b6000806040838503121561108c57600080fd5b825161109781610e70565b60208401519092506110a881610f3a565b809150509250929050565b600082516110c5818460208701610e05565b919091019291505056fea264697066735822122039939a0e6027e36eb59b0f3d2da020784f19564e64628847adf3c892f4d7e5b764736f6c634300080a0033";

type TimedFeeCollectModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TimedFeeCollectModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TimedFeeCollectModule__factory extends ContractFactory {
  constructor(...args: TimedFeeCollectModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    hub: string,
    moduleGlobals: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TimedFeeCollectModule> {
    return super.deploy(
      hub,
      moduleGlobals,
      overrides || {}
    ) as Promise<TimedFeeCollectModule>;
  }
  getDeployTransaction(
    hub: string,
    moduleGlobals: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(hub, moduleGlobals, overrides || {});
  }
  attach(address: string): TimedFeeCollectModule {
    return super.attach(address) as TimedFeeCollectModule;
  }
  connect(signer: Signer): TimedFeeCollectModule__factory {
    return super.connect(signer) as TimedFeeCollectModule__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimedFeeCollectModuleInterface {
    return new utils.Interface(_abi) as TimedFeeCollectModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TimedFeeCollectModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TimedFeeCollectModule;
  }
}
