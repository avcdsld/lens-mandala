/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LimitedFeeCollectModule,
  LimitedFeeCollectModuleInterface,
} from "../LimitedFeeCollectModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "hub",
        type: "address",
      },
      {
        internalType: "address",
        name: "moduleGlobals",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FollowInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "InitParamsInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "MintLimitExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleDataMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "NotHub",
    type: "error",
  },
  {
    inputs: [],
    name: "HUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MODULE_GLOBALS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
    ],
    name: "getPublicationData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "collectLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentCollects",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "referralFee",
            type: "uint16",
          },
        ],
        internalType: "struct ProfilePublicationData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializePublicationCollectModule",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "referrerProfileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processCollect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516112cb3803806112cb83398101604081905261002f91610128565b81816001600160a01b038116610058576040516348be0eb360e01b815260040160405180910390fd5b6001600160a01b03811660808190526040514281527f4e84a529f4c627b5e787037d117873af1018768804cca3c7f0d47041fe2c89ed9060200160405180910390a2506001600160a01b0381166100c2576040516348be0eb360e01b815260040160405180910390fd5b6001600160a01b03811660a08190526040514281527ff1a1fa6b64aa95186f5a1285e76198d0da80d9c5a88062641d447f1d7c54e56c9060200160405180910390a250505061015b565b80516001600160a01b038116811461012357600080fd5b919050565b6000806040838503121561013b57600080fd5b6101448361010c565b91506101526020840161010c565b90509250929050565b60805160a05161111a6101b1600039600081816101b90152818161021d015281816103890152818161051701528181610620015261090501526000818161017a0152818161048b0152610a3a015261111a6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633f5038921461005c57806388ffe85114610175578063a4c52b86146101b4578063c233f951146101db578063e49c3dda146101fb575b600080fd5b61011061006a366004610d5e565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101919091525060009182526020828152604080842092845291815291819020815160c0810183528154815260018201549381019390935260028101549183019190915260038101546001600160a01b0390811660608401526004909101549081166080830152600160a01b900461ffff1660a082015290565b60405161016c91908151815260208083015190820152604080830151908201526060808301516001600160a01b03908116918301919091526080808401519091169082015260a09182015161ffff169181019190915260c00190565b60405180910390f35b61019c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161016c565b61019c7f000000000000000000000000000000000000000000000000000000000000000081565b6101ee6101e9366004610dc9565b610210565b60405161016c9190610e74565b61020e610209366004610e9f565b61037e565b005b6060336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461025b576040516313bd2e8360e31b815260040160405180910390fd5b60008080808061026d87890189610f22565b94509450945094509450846000148061028c575061028a83610469565b155b8061029e57506001600160a01b038216155b806102ae575061271061ffff8216115b806102b7575083155b156102d5576040516348be0eb360e01b815260040160405180910390fd5b60008a8152602081815260408083208c845282529182902087815560028101879055600481018054600390920180546001600160a01b0319166001600160a01b038881169190911790915587166001600160b01b031990921691909117600160a01b61ffff8616021790558151601f8a018290048202810182019092528882528990899081908401838280828437600092019190915250929d9c50505050505050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103c7576040516313bd2e8360e31b815260040160405180910390fd5b6103d184866104fe565b600084815260208181526040808320868452909152902080546001909101541061040e57604051635b21dfd360e11b815260040160405180910390fd5b600084815260208181526040808320868452909152812060010180549161043483610f97565b9190505550838614156104535761044e858585858561074a565b610461565b61046186868686868661081c565b505050505050565b6040516343b938c560e01b81526001600160a01b0382811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906343b938c590602401602060405180830381865afa1580156104d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f89190610fb2565b92915050565b604051633648f48360e21b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d923d20c90602401602060405180830381865afa158015610566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058a9190610fd4565b90506001600160a01b0381161561060757604051635a30b51560e11b8152600481018490526001600160a01b0383811660248301526000604483015282169063b4616a2a9060640160006040518083038186803b1580156105ea57600080fd5b505afa1580156105fe573d6000803e3d6000fd5b50505050505050565b60405163a9ec656360e01b8152600481018490526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9ec656390602401602060405180830381865afa15801561066f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106939190610fd4565b90506001600160a01b0381166106bc57604051636992d36b60e11b815260040160405180910390fd5b6040516370a0823160e01b81526001600160a01b0384811660048301528216906370a0823190602401602060405180830381865afa158015610702573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107269190610ff1565b61074357604051636992d36b60e11b815260040160405180910390fd5b505b505050565b600084815260208181526040808320868452909152902060028101546004909101546001600160a01b0316610781848483856109e3565b60008061078c610a35565b60008a8152602081815260408083208c84529091528120600301549294509092506001600160a01b03909116906127106107ca61ffff85168861100a565b6107d49190611029565b905060006107e2828861104b565b90506107f96001600160a01b0387168d8584610ac1565b61080e6001600160a01b0387168d8785610ac1565b505050505050505050505050565b600084815260208181526040808320868452909152902060028101546004909101546001600160a01b0316610853848483856109e3565b600086815260208181526040808320888452909152812060040154600160a01b900461ffff16908080610884610a35565b909350905061271061089a61ffff83168861100a565b6108a49190611029565b9150600090506108b4828761104b565b9050831561098a5760006127106108cb868461100a565b6108d59190611029565b90506108e1818361104b565b6040516331a9108f60e11b8152600481018f90529092506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa15801561094c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109709190610fd4565b90506109876001600160a01b0388168e8385610ac1565b50505b60008a8152602081815260408083208c84529091529020600301546001600160a01b03908116906109bf9087168d8385610ac1565b6109d46001600160a01b0387168d8686610ac1565b50505050505050505050505050565b6000806109f285870187611062565b915091508281141580610a175750836001600160a01b0316826001600160a01b031614155b15610461576040516346308bd560e01b815260040160405180910390fd5b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166398f965d16040518163ffffffff1660e01b81526004016040805180830381865afa158015610a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab9919061108e565b915091509091565b604080516001600160a01b038581166024830152848116604483015260648083018590528351808403909101815260849092018352602080830180516001600160e01b03166323b872dd60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261074392879291600091610b59918516908490610bdb565b8051909150156107455780806020019051810190610b779190610fb2565b6107455760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b6060610bea8484600085610bf4565b90505b9392505050565b606082471015610c555760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610bd2565b6001600160a01b0385163b610cac5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bd2565b600080866001600160a01b03168587604051610cc891906110c8565b60006040518083038185875af1925050503d8060008114610d05576040519150601f19603f3d011682016040523d82523d6000602084013e610d0a565b606091505b5091509150610d1a828286610d25565b979650505050505050565b60608315610d34575081610bed565b825115610d445782518084602001fd5b8160405162461bcd60e51b8152600401610bd29190610e74565b60008060408385031215610d7157600080fd5b50508035926020909101359150565b60008083601f840112610d9257600080fd5b50813567ffffffffffffffff811115610daa57600080fd5b602083019150836020828501011115610dc257600080fd5b9250929050565b60008060008060608587031215610ddf57600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610e0457600080fd5b610e1087828801610d80565b95989497509550505050565b60005b83811015610e37578181015183820152602001610e1f565b838111156107435750506000910152565b60008151808452610e60816020860160208601610e1c565b601f01601f19169290920160200192915050565b602081526000610bed6020830184610e48565b6001600160a01b0381168114610e9c57600080fd5b50565b60008060008060008060a08789031215610eb857600080fd5b863595506020870135610eca81610e87565b94506040870135935060608701359250608087013567ffffffffffffffff811115610ef457600080fd5b610f0089828a01610d80565b979a9699509497509295939492505050565b61ffff81168114610e9c57600080fd5b600080600080600060a08688031215610f3a57600080fd5b85359450602086013593506040860135610f5381610e87565b92506060860135610f6381610e87565b91506080860135610f7381610f12565b809150509295509295909350565b634e487b7160e01b600052601160045260246000fd5b6000600019821415610fab57610fab610f81565b5060010190565b600060208284031215610fc457600080fd5b81518015158114610bed57600080fd5b600060208284031215610fe657600080fd5b8151610bed81610e87565b60006020828403121561100357600080fd5b5051919050565b600081600019048311821515161561102457611024610f81565b500290565b60008261104657634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561105d5761105d610f81565b500390565b6000806040838503121561107557600080fd5b823561108081610e87565b946020939093013593505050565b600080604083850312156110a157600080fd5b82516110ac81610e87565b60208401519092506110bd81610f12565b809150509250929050565b600082516110da818460208701610e1c565b919091019291505056fea26469706673582212204d5b430625572b3398e71bac8daa78c9d82494443982500fd2c3addd5e3008ac64736f6c634300080a0033";

type LimitedFeeCollectModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LimitedFeeCollectModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LimitedFeeCollectModule__factory extends ContractFactory {
  constructor(...args: LimitedFeeCollectModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    hub: string,
    moduleGlobals: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LimitedFeeCollectModule> {
    return super.deploy(
      hub,
      moduleGlobals,
      overrides || {}
    ) as Promise<LimitedFeeCollectModule>;
  }
  getDeployTransaction(
    hub: string,
    moduleGlobals: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(hub, moduleGlobals, overrides || {});
  }
  attach(address: string): LimitedFeeCollectModule {
    return super.attach(address) as LimitedFeeCollectModule;
  }
  connect(signer: Signer): LimitedFeeCollectModule__factory {
    return super.connect(signer) as LimitedFeeCollectModule__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LimitedFeeCollectModuleInterface {
    return new utils.Interface(_abi) as LimitedFeeCollectModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LimitedFeeCollectModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LimitedFeeCollectModule;
  }
}
